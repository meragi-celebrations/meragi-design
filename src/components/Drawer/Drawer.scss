@import '../../colors';

$overlay-opacity: .8;

$sizes: (
  'small': 400px,
  'medium': 550px,
  'large': 700px
);

@mixin size-animation-out($size, $distance, $direction) {
  $type: height;
  @if $direction == left {
    $type: width;
  } @else if $direction == right {
    $type: width;
  }

  &.#{$size} {
    animation: #{$direction}-slide-#{$size}-out 0.15s ease-in-out forwards;
    #{$type}: #{$distance};
  }
}

@mixin size-animation-in($size, $distance, $direction) {
  &.#{$size} {
    animation: #{$direction}-slide-#{$size}-in 0.15s ease-in-out forwards;
  }
}

@mixin from-size-list-out($direction) {
  @each $size, $distance in $sizes {
    @include size-animation-out($size, $distance, $direction);
  };
}

@mixin from-size-list-in($direction) {
  @each $size, $distance in $sizes {
    @include size-animation-in($size, $distance, $direction);
  };
}

.overlay {
  background-color: $black-90;
  position: fixed;
  inset: 0;
  opacity: $overlay-opacity;
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.drawer-content {
    position: fixed;
    background-color: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    overflow-y: auto;
    z-index: 1000;
    

    &.right {
        top: 0;
        right: 0;
        bottom: 0;

        @include from-size-list-out(right);
    }

    &.left {
        top: 0;
        left: 0;
        bottom: 0;
        @include from-size-list-out(left);
    }

    &.top {
        top: 0;
        left: 0;
        right: 0;
        @include from-size-list-out(top);
    }

    &.bottom {
        bottom: 0;
        left: 0;
        right: 0;
        @include from-size-list-out(bottom);
    }

    &[data-state="open"] {
        &.right {
          @include from-size-list-in(right);
        }

        &.left {
          @include from-size-list-in(left);
        }

        &.top {
          @include from-size-list-in(top);
        }

        &.bottom {
          @include from-size-list-in(bottom);
        }
    }

  &:focus {
    outline: none;
  }

  .actions {
    display: flex;
    justify-content: flex-end;
    margin-top: 5px;
    margin-bottom: -20px;
    padding-top: 5px;
  }

}

@mixin slide-keyframes($name, $direction, $distance) {
    
    $distance-value: if($direction == 'left' or $direction == 'top', -$distance, $distance);

  $movement: if($direction == 'left', 'X', if($direction == 'right', 'X', 'Y'));
  
  @keyframes #{$name}-in {
    from {
      transform: translate#{$movement}(#{$distance-value});
    }
    to {
      transform: translate#{$movement}(0);
    }
  }

  @keyframes #{$name}-out {
    from {
      transform: translate#{$movement}(0);
    }
    to {
      transform: translate#{$movement}(#{$distance-value});
    }
  }
}

@each $size, $distance in $sizes {
    @include slide-keyframes(top-slide-#{$size}, top, $distance);
    @include slide-keyframes(bottom-slide-#{$size}, bottom, $distance);
    @include slide-keyframes(left-slide-#{$size}, left, $distance);
    @include slide-keyframes(right-slide-#{$size}, right, $distance);
  }